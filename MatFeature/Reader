/*
 * @Author: LetMeFly
 * @Date: 2022-04-22 21:09:47
 * @LastEditors: LetMeFly
 * @LastEditTime: 2022-04-26 11:57:18
 */
#ifndef READER_H
#define READER_H

#include <MatFeature/Test>
#include <Eigen/Dense>
#include <fstream>
#include <cstring>
#include <vector>
using Eigen::MatrixXd;
using namespace std;

/**读入文件的数据
 * 
 * Parameters: 
 *   filePath - 文件路径
 *      其中对应文件的格式为：
 *         +--------------------------------+
 *         |  -2.3063596e+00  -1.6005953e-01|
 *         |  -1.6762010e+00  -2.6815952e+00|
 *         |   7.4658109e+00   1.9460515e-01|
 *         |                                |
 *         +--------------------------------+
 *         n个换行 n个空格
 * 
 * Returns:
 *   mat - Eigen::MatrixXd 类型的矩阵
*/
MatrixXd Read(const char* filePath) {
    ifstream istr(filePath, ios::in);
    vector<vector<double>> data;
    if (istr.fail()) {
        exit(-1);  // TODO: 自定义错误类
    }
    string line;
    while (getline(istr, line)) {
        if (line.empty()) {  // 空行
            continue;
        }
        vector<double> thisLine;
        double num;
        stringstream ss;
        ss << line;
        while (ss >> num) {
            thisLine.push_back(num);
        }
        data.push_back(thisLine);
    }
    // debug(data);
    assert(data.size() > 0);
    MatrixXd mat(data.size(), data[0].size());
    for (int line = 0; line < data.size(); line++) {
        for (int th = 0; th < data[line].size(); th++) {
            mat(line, th) = data[line][th];
        }
    }
    return mat;
}

#endif  // ifndef READER_H